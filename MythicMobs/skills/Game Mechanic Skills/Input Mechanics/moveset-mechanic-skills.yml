moveset-test_exec:
  Skills:
  - skill{s=moveset-exec;maxmoveset=4;reset=2;
          name="Test Moveset";
          1=[ - message{m="skill 1"} ];
          2=[ - message{m="skill 2"} ];
          3=[ - message{m="skill 3"} ];
          4=[ - message{m="skill 4"} ]} @self

Moveset:
  Skills:
  - skill{s=moveset-exec}

moveset-exec:
  Cooldown: 0.05
  Conditions:
  - offGCD true
  - hasaura{aura=clickcombo-input} false
  - hasaura{name=stun} castinstead stun-oncast
  Skills:
  - skill{s=eval-hit} @self
  - CancelEvent{sync=true} ?~isPlayer
  - modifyDamage{a=0;action=MULTIPLY;sync=true} ?~!isPlayer
  - aura{aura=denykb;d=10} @trigger 
  - skill{s=moveset-start}

moveset-start:
#  Cooldown: 0.05
  Skills:
  - setvariable{var=caster.moveset_index;value="0"} ?!variableisset{var=caster.moveset_index} 
  - setvariable{var=caster.moveset_index;value="<caster.var.moveset_index>+1"}
  - setvariable{var=caster.maxmoveset;value=<skill.maxmoveset|3>} 

  - aura{name=movesetreset;d="<skill.reset|1>*20";ma=true;oe=moveset-reset;bartimer=false}
  - setvariable{var=skill.executeskill;value="<caster.var.moveset_index>";type=STRING}
  - setvariable{var=crit;value=<skill.crit|<skill.<skill.var.executeskill>>>;type=STRING} 

  - switch{condition=varequals{var=skill.hit;value=<case>};cases=
        case CRIT=[ - vskill{s=<skill.var.crit>} ]
        case SPRINT=[ - vskill{s=<skill.sprint|<skill.<skill.var.executeskill>>>} ]
        case UPPERCUT=[ - vskill{s=<skill.uppercut|<skill.<skill.var.executeskill>>>} ]
        case AERIAL=[ - vskill{s=<skill.aerial|<skill.var.crit>>} ]
        case DEFAULT=[ - vskill{s=<skill.<skill.var.executeskill>>} ]
      }   

  - skill{s=moveset-end} 

moveset-end:
  Conditions:
  - variableEquals{var=caster.moveset_index;value="<caster.var.maxmoveset>"}
  Skills:
  - variableUnset{var=caster.moveset_index} @self
  - removeaura{aura=movesetreset}
#  - message{m="moveset ended"} @server

moveset-reset:
  Conditions:
  - variableisset{var=caster.moveset_index} 
  Skills:
  - variableUnset{var=caster.moveset_index} 
#  - message{m="reset"} @server

#moveset-switch:
#  Skills:
#  - switch{condition=variableequals{var=caster.moveset_index;value=<case>};cases=
#        case 1=[ - vskill{s=<skill.1>} ]
#        case 2=[ - vskill{s=<skill.2>} ]
#        case 3=[ - vskill{s=<skill.3>} ]
#        case 4=[ - vskill{s=<skill.4>} ]
#        case 5=[ - vskill{s=<skill.5>} ]
#        case 6=[ - vskill{s=<skill.6>} ]
#        case 7=[ - vskill{s=<skill.7>} ]
#        case 8=[ - vskill{s=<skill.8>} ]
#        case 9=[ - vskill{s=<skill.9>} ]
#        case DEFAULT=[
#          - message{m="No skill set, out of bounds!"}
#          - skill{s=moveset-reset}
#          ]
#      }

  
  
