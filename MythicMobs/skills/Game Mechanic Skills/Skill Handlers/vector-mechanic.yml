vector-x:
  Skills:
  - setvar{var=string;val="%string_replaceCharacters_cleanup_<skill.location>%";type=STRING}
  - setvar{var=firstindex;val="%math_0_{string_indexOf_<skill.var.string>_<&cm>}+1%"}
  - setvar{var=lastindex;val="%string_lastIndexOf_<skill.var.string>_<&cm>%"}
  - setvar{var=string;val="%string_substring_<skill.var.firstindex>,<skill.var.lastindex>_<skill.var.string>%";type=STRING}
#  - message{m="first <skill.var.firstindex> last <skill.var.lastindex> <skill.var.string> <skill.location>"} @server
  - setvar{var=lastindex;val="%string_lastIndexOf_<skill.var.string>_<&cm>%"}
  - setvar{var=<skill.name>_x;val="%string_substring_0,<skill.var.lastindex>_<skill.var.string>%";type=FLOAT}
 # - message{m="first <skill.var.firstindex> last <skill.var.lastindex> <skill.var.string>"} @server
  
vector-y:
  Skills:
  - setvar{var=string;val="%string_replaceCharacters_cleanup_<skill.location>%";type=STRING}
  - setvar{var=firstindex;val="%math_0_{string_indexOf_<skill.var.string>_<&cm>}+1%"}
  - setvar{var=lastindex;val="%string_lastIndexOf_<skill.var.string>_<&cm>%"}
  - setvar{var=string;val="%string_substring_<skill.var.firstindex>,<skill.var.lastindex>_<skill.var.string>%";type=STRING}
 # - message{m="1 first <skill.var.firstindex> last <skill.var.lastindex> <skill.var.string>"} @self
  - setvar{var=firstindex;val="%math_0_{string_indexOf_<skill.var.string>_<&cm>}+1%"}
  #- message{m="2 first <skill.var.firstindex> last <skill.var.lastindex> <skill.var.string>"} @self
  - setvar{var=<skill.name>_y;val="%string_substring_<skill.var.firstindex>,<skill.var.lastindex>_<skill.var.string>%";type=FLOAT}
  #- message{m="<skill.var.string>"} @self

vector-z:
  Skills:
  - setvar{var=string;val="%string_replaceCharacters_cleanup_<skill.location>%";type=STRING}
  - setvar{var=lastindex;val="%math_0_{string_lastIndexOf_<skill.var.string>_<&cm>}+1%"}
  - setvar{var=<skill.name>_z;val="%string_substring_<skill.var.lastindex>_<skill.var.string>%";type=FLOAT}

# - message{m="last <skill.var.lastindex> <skill.var.facing_z>"} @server
test-origin-setloc:
  Skills:
  - skill{s=origin-setloc;origin=@selflocation}

origin-setloc:
  Skills:
  - setvarloc{var=origin_loc;val=@targetedlocation}
  
  - skill{s=vector-x;name=origin;location=<skill.var.origin_loc>}
  - skill{s=vector-y;name=origin;location=<skill.var.origin_loc>}
  - skill{s=vector-z;name=origin;location=<skill.var.origin_loc>}
  - message{m="Origin <skill.var.origin_x> <skill.var.origin_y> <skill.var.origin_z>"} @self ?varequals{var=debug;val=true}
 # - e:p{p=end_rod;a=1;size=3} @Location{x=<skill.var.origin_x>;y=<skill.var.origin_y>;z=<skill.var.origin_z>} ?varequals{var=debug;val=true}
 # - e:p{p=end_rod;a=1;size=3} @variablelocation{var=origin_loc} ?varequals{var=debug;val=true}

target-setloc:
  Skills:
  - setvarloc{var=target_loc;val=@targetedlocation}
  - skill{s=vector-x;name=target;location=<skill.var.target_loc>}
  - skill{s=vector-y;name=target;location=<skill.var.target_loc>}
  - skill{s=vector-z;name=target;location=<skill.var.target_loc>}
  - message{m="Target <skill.var.target_x> <skill.var.target_y> <skill.var.target_z>"} @self ?varequals{var=debug;val=true}
  #- e:p{p=reddust;a=1;size=3} @Location{x=<skill.var.target_x>;y=<skill.var.target_y>;z=<skill.var.target_z>} ?varequals{var=debug;val=true}
 # - e:p{p=reddust;a=1;size=3} @variablelocation{var=target_loc} ?varequals{var=debug;val=true}
  
test-distance-origin_to_target:
  Skills:
  - skill{s=distance-origin_to_target;origin=@forward{f=2;uel=true}} @forward{f=5;uel=true}

distance-origin_to_target:
  Skills:
  - setvar{var=debug;val=<skill.debug|false>;type=STRING}

  - skill{s=origin-setloc} @origin
  - skill{s=target-setloc} @targetedlocation

  - setvar{var=vector_x;val="<skill.var.target_x>-<skill.var.origin_x>";type=FLOAT}
  - setvar{var=vector_y;val="<skill.var.target_y>-<skill.var.origin_y>";type=FLOAT}
  - setvar{var=vector_z;val="<skill.var.target_z>-<skill.var.origin_z>";type=FLOAT}

  - setvar{var=distance;val="sqrt(abs(<skill.var.vector_x>^2+<skill.var.vector_y>^2+<skill.var.vector_z>^2))";type=FLOAT}

  - message{m=<skill.var.vector_x>,<skill.var.vector_y>,<skill.var.vector_z> Distance <skill.var.distance>} @self ?varequals{var=debug;val=true}
