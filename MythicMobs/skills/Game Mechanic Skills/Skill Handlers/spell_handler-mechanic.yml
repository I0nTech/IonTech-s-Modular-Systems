# Cooldown Stuff. 

cooldown-cast-1:
  Skills:
  - skill:Spell{
      origin=@forward{f=-0.5;yo=-0.2;uel=true};
      name="Test Shot";
      id=test-shot-fire;
      spellcd=200;damage=2.5} @ENO{r=24}

cooldown-cast-2:
  Skills:
  - skill:Spell{
      name="Chain Shot";
      id=test-chainmissile-cast;
      spellcd=10} @self

cooldown-cast-3:
  Skills:
  - skill:Spell{
      origin=@forward{f=-0.5;yo=-0.2;uel=true};
      name="Spiral Shot";
      id=test-spiralshot-fire;
      category=ARCANE;
      charges=3;chargecd=4;spellcd=2} @forward{f=12;uel=true}

cooldown-cast-4:
  Skills:
  - skill:Spell{
      origin=@forward{f=-0.5;yo=-0.2;uel=true};
      name="Spiral Shot Slow";
      id=test-spiralshot-fire;
      category=ARCANE;
      charges=3;chargecd=20;spellcd=2} @forward{f=12;uel=true}

  - skill{s=spell-modify_charges;name="Spiral Shot Slow";id=test-spiralshot-fire;charges=3;delay=20} @self
# Main Logic Systems

Spell:
  Skills:
  - skill:spell

spell:
  Conditions:
  - hasaura{name=stun} castinstead stun-oncast
  - offGCD
  Skills:
  - skill{s=spell-init} @self
  - skill{s=spell_charge-init} @self
  - skill{s=spell-cast;branch=true} ?varequals{var=charges;val=0} 
  - skill{s=spell_charge-cast;branch=true} ?varinrange{var=charges;val=>0} 

spell-init:
  Conditions:
  - varisset{var=id} false
  Skills:
  - setvar{var=id;val=<skill.id|unset>;type=STRING}
  - setvar{var=type;val=<skill.type|<skill.category|Unknown>>;type=STRING}
  - setvar{var=name;val=<skill.name|<skill.spell|Unknown>>;type=STRING}
  - skill{s=spell-set_type}
  - setvar{var=spellcooldown;val=<skill.spellcooldown|<skill.spellcd|1>>*20;type=FLOAT}
  - setvar{var=displaycd;val=<skill.displaycd|<skill.showcd|true>>;type=STRING}
  - setvar{var=caster.lastspell;val=<skill.var.id>;type=STRING;save=false} @self

spell-set_type:
  Skills:
  - setvar{var=name;val="<#ff00ff><skill.var.name>";type=STRING} ?varequals{var=type;val=ARCANE}

spell_charge-init:
  Conditions:
  - varisset{var=charges} false
  Skills:
  - setvar{var=charges;val=<skill.charges|0>;type=INTEGER}
  - setvar{var=chargecooldown;val=<skill.chargecooldown|<skill.chargecd|3>>*20;type=FLOAT}
#  - setvar{var=chargereset;val=<skill.chargereset|<skill.mode|false>>;type=STRING}

spell-cast:
  Conditions:
  - hasaura{name=stun} castinstead stun-oncast
  - offGCD
  Skills:  
  - skill{s=spell-init} @self 
  - skill{s=spell-exec} 

# For handling old skills
spell-charge-cast:
  Skills:
  - skill{s=spell_charge-cast}

spell_charge-cast:
  Conditions:
  - hasaura{name=stun} castinstead stun-oncast
  - offGCD
  Skills:
  - skill{s=spell-init} @self 
  - skill{s=spell_charge-init} @self 
  - setvar{var=caster.<skill.var.id>-charges;val=<skill.var.charges>;type=INTEGER;save=false} ?!varisset{name=caster.<skill.var.id>-charges} @self
  - setvar{var=caster.<skill.var.id>-maxcharges;val="<skill.var.charges>";type=INTEGER;save=false} @self
  
  - skill{s=spell_charge-exec}
  - skill{s=spell_charge-regen} @self

spell-exec:
  Conditions:
  - hasaura{name="<skill.var.id>-cd"} castinstead spell-oncd
  Skills:
  - vskill{s=<skill.var.id>} 
  - skill{s=spell-cooldown} @self

spell_charge-exec:
  Conditions:
  - varequals{var=caster.<skill.var.id>-charges;val=0} castinstead spell_charge-nocharges
  - hasaura{name="<skill.var.id>-cd"} castinstead spell_charge-oncd
  Skills:
  - vskill{s=<skill.var.id>} 
  - setvar{var=caster.<skill.var.id>-charges;val="<caster.var.<skill.var.id>-charges>-1";type=INTEGER} @self
  - skill{s=spell-cooldown} @self

spell-cooldown:
  Skills:
  - skill{s=spell-init} @self 
  - skill{s=spell_charge-init} @self 
  
  - auraremove{name="<skill.var.id>-cd"} ?hasaura{name="<skill.var.id>-cd"}
  - aura{name="<skill.var.id>-cd";type=cooldown;duration=<skill.var.spellcooldown>;i=1;ma=false;rd=false;desot=false;
    bartimer=true;bartimertext="<skill.name> &e%math_1:_<skill.var.aura-duration>/20%s";bartimercolor=BLUE;
    os=[ - setvar{var=caster.<skill.var.id>-cd;val="%math_1:_<skill.var.aura-duration>/20%";type=FLOAT;d=10} ];
    ot=[ - setvar{var=caster.<skill.var.id>-cd;val="%math_1:_<skill.var.aura-duration>/20%";type=FLOAT;d=10} ];
    oe=[ 
    - skill{s=spell-cooldown-end} ?varequals{var=charges;val=0} 
    - skill{s=spell_charge-cooldown-end} ?varinrange{var=charges;val=>0} 
    ]}

  - skill{delay=1;s=[
    - am{m="<skill.var.name> &fis now on cooldown for &e<caster.var.<skill.var.id>-cd>s"} ?varequals{var=charges;val=0} 
    - am{m="<skill.var.name> <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>] &fis now on cooldown for &e<caster.var.<skill.var.id>-cd>s"} ?varinrange{var=charges;val=>0} 
    ]} ?!varequals{var=displaycd;val=false} 

spell_charge-regen:
  Conditions:
  - (varequals{var=caster.<skill.var.id>-charges;val=<caster.var.<skill.var.id>-maxcharges>} || varinrange{var=caster.<skill.var.id>-charges;val=><caster.var.<skill.var.id>-maxcharges>}) false
  Skills:
  - skill{s=spell-init} @self 
  - skill{s=spell_charge-init} @self 
  
  - aura{name="<skill.var.id>-chargecooldown";type=charge_cooldown;duration=<skill.var.chargecooldown>;i=1;ma=false;rd=false;desot=false;
    bartimer=false;bartimercolor=BLUE;
    bartimertext="<skill.name> &f<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#FFA500>‚ùÉ &e%math_1:_<skill.var.aura-duration>/20%s";
    os=[ - setvar{var=caster.<skill.var.id>-chargecooldown;val="%math_1:_<skill.var.aura-duration>/20%";type=FLOAT;d=10} ];
    ot=[ - setvar{var=caster.<skill.var.id>-chargecooldown;val="%math_1:_<skill.var.aura-duration>/20%";type=FLOAT;d=10} ];
    oe=[ 
    - skill{s=spell-modify_charges;charges=1}
    - skill{s=spell_charge-reset}
    - skill{s=spell_charge-regen;delay=1}
    ]} @self
#    - am{m="<skill.var.name> <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>] &fReady!"} 

spell_charge-nocharges:
  Cooldown: 0.25
  Skills:
  - sound{s=block.note_block.bass;p=1.2;v=0.2;audience=self} @self
  - am{m="<skill.var.name> <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>], Next charge in &e<caster.var.<skill.var.id>-chargecooldown>s"} @self
 # - am{m="<skill.var.name> <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>], Next charge in &e<caster.var.<skill.var.id>-chargecooldown>s";delay=0}
  #- aura{name=cooldown_display;d=<skill.var.chargecooldown>;i=1;ow=true;
  #  ot=[
  #  - removeaura{name=cooldown_display} ?!hasaura{name="<skill.var.id>-chargecooldown"}
  #  - am{m="<skill.var.name> <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>], Next charge in &e<caster.var.<skill.var.id>-chargecooldown>s"} 
  #  ]} @self

spell_charge-reset:
  Conditions:
  - varequals{var=caster.<skill.var.id>-charges;val=<caster.var.<skill.var.id>-maxcharges>} || varinrange{var=caster.<skill.var.id>-charges;val=><caster.var.<skill.var.id>-maxcharges>}
  Skills:
  - varunset{var=caster.<skill.var.id>-charges} 
  - varunset{var=caster.<skill.var.id>-maxcharges} 
#  - message{m="<skill.name> Charges Reset"}

spell-cooldown-end:
  Skills:
    - am{m="<skill.var.name> &foff cooldown!"} ?!varequals{var=displaycd;val=false}
    - sound{s=entity.experience_orb.pickup;p=0.2;v=0.1;audience=self} @self ?!varequals{var=displaycd;val=false}
    - varunset{var=caster.<skill.var.id>-cd} 

spell_charge-cooldown-end:
  Skills:
  #  - am{m="<skill.var.name> <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>] &foff cooldown!"} ?!varequals{var=displaycd;val=false}
  #- sound{s=entity.experience_orb.pickup;p=0.2;v=0.1;audience=self} @self ?!varequals{var=displaycd;val=false}
  - varunset{var=caster.<skill.var.id>-cd} 

spell-cooldown-oncd:
  Skills:
  - skill{s=spell-oncd}

spell-oncd:
  Cooldown: 0.25
  Skills:
  - sound{s=block.note_block.basedrum;p=0.6;v=0.2;audience=self} @self
  - am{m="<skill.var.name> &fis still on cooldown for &e<caster.var.<skill.var.id>-cd>s";delay=1} @self ?!varequals{var=displaycd;val=false}

spell_charge-oncd:
  Cooldown: 0.25
  Skills:
  - sound{s=block.note_block.basedrum;p=0.6;v=0.2;audience=self} @self
  - am{m="<skill.var.name> <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>] &fis still on cooldown for &e<caster.var.<skill.var.id>-cd>s";delay=1} @self

# External Functions

spell-modify_charges:
  Skills:
  - skill{s=spell-init}
  - skill{s=spell_charge-init}
  - sound{s=entity.experience_orb.pickup;p=0.2;v=0.2;audience=self}
  - setvar{var=caster.<skill.var.id>-charges;val="min(<caster.var.<skill.var.id>-charges>+<skill.charges|0>,<caster.var.<skill.var.id>-maxcharges>)"} 
  - am{m="<skill.var.name> &fCharges <#C0C0C0>[&e<caster.var.<skill.var.id>-charges>/<caster.var.<skill.var.id>-maxcharges><#C0C0C0>]"}

spell-reset_cooldown:
  Skills:
  - skill{s=spell-init} @self 
  - auraremove{name="<skill.var.id>-cd"} ?hasaura{name="<skill.var.id>-cd"}
  - am{m="<skill.var.name> &fCooldown Reset";delay=1} ?!varequals{var=displaycd;val=false}
  - sound{s=entity.experience_orb.pickup;p=0.2;v=0.2;audience=self} @self ?!varequals{var=displaycd;val=false}
  - varunset{var=caster.<skill.var.id>-cd} 
